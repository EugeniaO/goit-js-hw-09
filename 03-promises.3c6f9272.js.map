{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVe,IAAIC,SAAQ,SAACC,EAASC,GACnCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAMPL,EAAOa,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,GAAShB,EAAOiB,SAASZ,MAAMa,MAC/BC,GAAQnB,EAAOiB,SAASE,KAAKD,MAC7BE,GAAUpB,EAAOiB,SAASG,OAAOF,MACnCG,EAAUL,EAAQG,EAEtB,GAAIH,EAAQ,GAAKG,EAAO,GAAKC,GAAU,EAErC,YADAtB,EAAAwB,OAAOC,QAAS,8BAIlB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAI/BrB,EAHiBqB,EAAI,EACrBH,EAAUG,EAAIH,EAAUL,GAGrBS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,M,OAAYP,EAAAwB,OAAOK,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,G,IACjFwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,M,OAAYP,EAAAwB,OAAOQ,QAAQ,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,G,IAEpFgB,GAAWF,C,CAGbnB,EAAO+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const result = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay});\n      } else {\n        reject({ position, delay});\n      }\n    }, delay);\n  });\n\n  return result;\n}\n\nformEl.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const delay = +formEl.elements.delay.value;\n  const step = +formEl.elements.step.value;\n  const amount = +formEl.elements.amount.value;\n  let timeout = delay + step;\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notify.warning(`Please enter valid values!`);\n    return\n  }\n\n  for (let i = 0; i < amount; i++) { \n    const position = i + 1;\n    timeout = i ? timeout : delay;\n\n    createPromise(position, timeout)\n      .then(({ position, delay }) => Notify.success(`Fullfiled promise ${position} in ${delay}`))\n      .catch(({ position, delay }) => Notify.failure(`Rejected promise ${position} in ${delay}`));\n    \n    timeout += step;\n  }\n\n  formEl.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","elements","value","step","amount","timeout","Notify","warning","i","then","param","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.3c6f9272.js.map"}